/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int kthSmallest(TreeNode root, int k) {
        Stack<TreeNode> st = new Stack<>();

        TreeNode curr = root;
        int count = 0;
        int ans = 0;

        while(curr != null || (!st.isEmpty())){
            while(curr != null){
                st.push(curr);
                curr = curr.left;
            }

            curr = st.pop();
            ans = curr.val;
            count++;
            if(count == k) break;
            curr = curr.right;
        }
        //int ans
        return ans;

    }
}
