/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> res = new ArrayList<>();
        if(root == null) return res;

        Queue<TreeNode> qu = new LinkedList<>();
        qu.offer(root);
        boolean revLev = false;

        while(!qu.isEmpty()){
            int size = qu.size();
            List<Integer> currow = new ArrayList<>();
            while(size-- > 0) {
                TreeNode curr = qu.poll();
                currow.add(curr.val);
                if(curr.left != null) qu.offer(curr.left);
                if(curr.right != null) qu.offer(curr.right);
            }
            if(revLev) Collections.reverse(currow);
            res.add(currow);
            revLev = !revLev;
        }
        return res;
        
    }
}
